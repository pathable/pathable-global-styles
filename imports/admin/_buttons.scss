//
// BUTTONS

// Configuration
$btn-name: 'button' !default;
$btn-hover: darken 3% !default;
$btn-border:  darken 3% !default; // Set to false for no border
$btn-size-ratio: 1.2 !default;
$btn-schemes: (
  default: $border,
  success: $green,
  danger:  $red,
  warning: #f1c40f,
  info:    #2980b9
) !default;

// Color helper
// 1. Background-color
// 2. On hover
// 3. Border-color
@mixin button-color($color) {
  $everything-okay: true;

  // Making sure $color is a color
  @if type-of($color) != color {
    @warn "`#{$color}` is not a color for `button-color`";
    $everything-okay: false;
  }

  // Making sure $btn-hover and $btn-border are 2 items long
  @if length($btn-hover) != 2
   or length($btn-border) != 2 {
    @warn "Both `$btn-hover` and `$btn-border` should be two items long for `button-color`.";
    $everything-okay: false;
  }

  // Making sure first items from $btn-hover and $btn-border are valid functions
  @if not function-exists(nth($btn-hover, 1))
   or not function-exists(nth($btn-border, 1)) {
    @warn "Either `#{nth($btn-hover, 1)}` or `#{nth($btn-border, 1)}` is not a valid function for `button-color`.";
    $everything-okay: false;
  }

  // Making sure second items from $btn-hover and $btn-border are percentages
  @if type-of(nth($btn-hover, 2)) != number
   or type-of(nth($btn-border, 2)) != number {
    @warn "Either `#{nth($btn-hover, 2)}` or `#{nth($btn-border, 2)}` is not a valid percentage for `button-color`.";
    $everything-okay: false;
  }

  // If there is no mistake
  @if $everything-okay == true {
    background-color: $color; // 1

    &:hover,
    &:active { // 2
      background: call(nth($btn-hover, 1), $color, nth($btn-hover, 2));
    }

    @if $btn-border != false { // 3
      border-color: call(nth($btn-border, 1), $color, nth($btn-border, 2));
    }
  }
}

// Default class
// 1. Border or not border?
// 2. XXL modifier
// 3. XL modifier
// 4. Large modifier
// 5. Small modifier
// 6. Bold modifier
// 7. Block modifier
// 8. Uppercase modifier
// 9. Light modifier
// 10. Color themes modifier
.#{$btn-name} {
  // Default styles
  @include box-shadow($input-gray-shadow 1px 1px 1px);
  @include transition(background .15s);
  border-radius: .15em;
  border: if($btn-border != false, 1px solid, none); // 1
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-size: 1em;
  font-weight: 400;
  height: 3.4em;
  letter-spacing: 0.02em;
  padding: .8em 1.5em;
  text-transform: uppercase;
  @include box-sizing(border-box);

  // Modifiers

  &--xxl { // 2
    font-size: 1.4em * $btn-size-ratio;
  }

  &--xl { // 3
    font-size: 1.2em * $btn-size-ratio;
  }

  &--large { // 4
    font-size: 1em * $btn-size-ratio;
    // height: 6em;
    @media screen and (max-width:500px) {
      font-size: 1em;
      height: 3em;
      padding: 0.6em 1.2em;
      .field & {
        [class^="icon-"], [class*="icon-"] {
          left: 0.8em;
          top: 1em;
        }
      }
    }
  }

  &--small { // 5
    font-size: 1em / $btn-size-ratio;
    height: 3.3em;
  }

  &--xs { // 5
    font-size: 0.8em / $btn-size-ratio;
  }

  &--bold { // 6
    font-weight: bold;
  }

  &--block { // 7
    display: block;
    width: 100%;
  }

  &--upper { // 8
    text-transform: uppercase;
  }

  &--light { // 9
  	background: #fff;
  	border-color: rgba($blue, .8);
  	color: $blue - #111;
  	@include box-shadow($input-blue-shadow);
  	&:hover, &:focus {
      background-color: $blue;
  		border-color: $blue;
      color: $white;
  	}
  }

  &--cancel, &--delete { // 10
    background: rgba(0,0,0,0.2);
    border: 1px solid rgba(0,0,0,0.05);
    &:hover, &:focus {
      background: $red;
    }
  }

  &--reset { // 11
    background: transparent;
    border: none;
  }

  &--error { // 12
    background: $red;
    color: $white;
  }

  @each $key, $value in $btn-schemes { // 10
    &--#{$key} {
      @include button-color($value);
    }
  }

  // Custom icon fonts
  i {
  	display: inline-block;
    font-size: 1.25em;
  	position: relative;
  	top: 1px;
  	@include scale(1);
  }
  i + span {
    margin-left: $size/1.5;
    text-transform: uppercase;
  }
}

.button--loading {
  position: relative;
  &:before {
    background: url("/packages/pathable-styles/images/loading-light.svg") no-repeat center;
    background-size: contain;
    bottom: 0;
    content: "";
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 2;
  }
  &.button--success {
    &:before {
      background-color: $green;
    }
  }
  &.button--light {
    &:before {
      background-color: $blue;
    }
  }
}

// Button layout
.btn-controls {
	@include pie-clearfix;
	ul {
		@include pie-clearfix;
		&.left li {
			float: left;
			margin-right: .5em;
      &:first-child {
        margin-left: 0;
      }
      @media screen and (max-width:500px) {
        margin-right: .25em;
        margin-left: .25em;
      }
		}
		&.right li {
			float: left;
			margin-left: .5em;
      @media screen and (max-width:500px) {
        margin-right: .25em;
        margin-left: .25em;
      }
		}
	}
	li {
		display: inline-block;
		float: left;
    margin-bottom: .5em;
    margin-left: .5em;
	}
  &.padded {
    margin: 0 0 2em;
    @media screen and (max-width:500px) {
      margin: 0 0 1.2em;
    }
  }
  &.top-right {
    float: right;
    margin-top: -5.5em;
    li {
      margin-bottom: 0;
    }
  }
  @media screen and (max-width:500px) {
    span {
      display: none;
    }
  }
}

.btn-group button {
	float: left;
	margin-right: -1px;
	@include border-radius(0);
	&:first-child {
		@include border-left-radius(2px);
	}
	&:last-child {
		@include border-right-radius(2px);
	}
	&:hover, &:focus {
		position: relative;
		z-index: 1;
	}
}
